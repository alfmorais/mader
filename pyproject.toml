[tool.poetry]
name = "mader"
version = "0.1.0"
description = "Meu Acervo Digital de Romances"
authors = ["alfmorais <alfredneto@hotmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.111.0"
pydantic-settings = "^2.3.4"
pydantic = {extras = ["email"], version = "^2.7.4"}
sqlalchemy = "^2.0.31"
alembic = "^1.13.2"
aiosqlite = "^0.20.0"
psycopg = "^3.2.0"
psycopg-binary = "^3.2.0"


[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
taskipy = "^1.13.0"
ruff = "^0.4.10"
httpx = "^0.27.0"
pytest-asyncio = "^0.23.7"
aiosqlite = "^0.20.0"
ipdb = "^0.13.13"
testcontainers = "^4.7.0"

[tool.ruff]
line-length = 79
extend-exclude = ["migrations"]

[tool.ruff.lint]
preview = true
select = ["I", "F", "E", "W", "PL", "PT"]

[tool.ruff.format]
preview = true
quote-style = "double"

[tool.pytest.ini_options]
pythonpath = "."
addopts = "-p no:warnings"
asyncio_mode = "auto"

[tool.taskipy.tasks]
lint = "ruff check . && ruff check . --diff"
format = "ruff check . --fix && ruff format ."
run = "fastapi dev src/app/application.py"
pre_test = "task lint"
test = "pytest -s -x --cov=src -vv"
post_test = "coverage html"
up = "docker compose build --no-cache && docker compose up"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
